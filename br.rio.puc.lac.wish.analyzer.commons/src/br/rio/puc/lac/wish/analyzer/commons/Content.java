package br.rio.puc.lac.wish.analyzer.commons;

import java.util.Arrays;
import java.util.UUID;

import br.rio.puc.lac.wish.analyzer.utils.JSon;

/**
 * Content
 * 
 * Represents the content generated by a mobile social user with its mandatory
 * properties:
 * <ul>
 * <li>Social identification</li>
 * <li>Geographic location</li>
 * <li>Time of creation</li>
 * </ul>
 * 
 * @author Marcelo Malcher
 * @param <K>
 * @param <T>
 * 
 */
public class Content<K, T> implements Comparable<Content<K, T>> {

  /** */
  private String id;

  /** */
  private K creatorId;

  /** */
  private T content;

  /** */
  private String[] tags;

  /** */
  private String[] venues;

  /** */
  private Location location;

  /** */
  private long timestamp;

  /** */
  private Classification classification;

  /**
   * 
   */
  public Content() {
    super();
  }

  /**
   * 
   * @return
   */
  public String getId() {
    return id;
  }

  /**
   * 
   * @param id
   */
  public void setId(String id) {
    this.id = id;
  }

  public void newId() {
    this.id = UUID.randomUUID().toString();
  }

  /**
   * 
   * @return
   */
  public K getCreatorId() {
    return creatorId;
  }

  /**
   * 
   * @param creatorId
   */
  public void setCreatorId(K creatorId) {
    this.creatorId = creatorId;
  }

  /**
   * 
   * @return
   */
  public T getContent() {
    return content;
  }

  /**
   * 
   * @param content
   */
  public void setContent(T content) {
    this.content = content;
  }

  /**
   * 
   * @return
   */
  public String[] getTags() {
    return tags;
  }

  /**
   * 
   * @param tags
   */
  public void setTags(String[] tags) {
    this.tags = tags;
  }

  /**
   * 
   * @return
   */
  public String[] getVenues() {
    return venues;
  }

  /**
   * 
   * @param venues
   */
  public void setVenues(String[] venues) {
    this.venues = venues;
  }

  /**
   * 
   * @return
   */
  public Location getLocation() {
    return location;
  }

  /**
   * 
   * @param location
   */
  public void setLocation(Location location) {
    this.location = location;
  }

  /**
   * 
   * @return
   */
  public long getTimestamp() {
    return timestamp;
  }

  /**
   * 
   * @param timestamp
   */
  public void setTimestamp(long timestamp) {
    this.timestamp = timestamp;
  }

  /**
   * 
   * @return
   */
  public Classification getClassification() {
    return classification;
  }

  /**
   * 
   * @param classification
   */
  public void setClassification(Classification classification) {
    this.classification = classification;
  }

  /**
   * 
   * {@inheritDoc}
   */
  @Override
  public String toString() {
    return "Content [classification=" + classification + ", content=" + content
      + ", creatorId=" + creatorId + ", id=" + id + ", location=" + location
      + ", tags=" + Arrays.toString(tags) + ", timestamp=" + timestamp + "]";
  }

  /**
   *   
   */
  @Override
  public int compareTo(Content<K, T> other) {
    return this.id.compareTo(other.id);
  }

  /**
   * 
   * @param args
   */
  public static void main(String[] args) {
    //test something...
    String jsonString =
      "{\"classification\":{\"classificationMap\":{\"TEMPORAL\":\"TW:100[5/9/11 9:38 PM-5/10/11 1:38 AM]\"}},\"content\":\"@tvzmultishow quando vai ter JUDAS na programação? *-*\",\"creatorId\":\"67732359805550593\",\"id\":\"123\",\"location\":{\"latitude\":40.7143528,\"longitude\":-74.0059731,\"place\":{\"countryCode\":\"US\",\"id\":\"9\",\"name\":\"Manhattan\",\"placeType\":\"city\",\"streetAddress\":\"\"}},\"tags\":[],\"timestamp\":1304983627000}";
    Content content = JSon.getFromJSONString(jsonString, Content.class);
    System.out.println(content);
    String newJSonString = JSon.toJSONString(Content.class, content);
    System.out.println(newJSonString);
    Content<String, String> theContent = new Content<String, String>();
    theContent.setId("123");
    theContent.setCreatorId("marcelomalcher");
    theContent.setContent("Hey, this traffic jam is terrible");
    theContent.setTags(new String[] { "#wishproject", "#phd", "#traffic " });
    theContent.setLocation(new Location(40.7143528d, -74.0059731d));
    theContent.setTimestamp(1304983627000l);
    Classification classification = new Classification();
    classification.putClassification("TEMPORAL", "TW:100");
    classification.putClassification("SPATIAL", "REGION:25");
    classification.putClassification("SEMANTIC", "TRAFFICJAM");
    classification.putInformation("SENTIMENTAL", "-1");
    theContent.setClassification(classification);
    String theContentJSON = JSon.toJSONString(Content.class, theContent);
    System.out.println(theContentJSON);

  }
}
